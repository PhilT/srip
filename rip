#!/bin/env ruby

require 'bundler/setup'

Bundler.require(:default)

require 'fileutils'
require 'yaml'

Dir['./lib/*.rb'].each do |file|
  require file
end

trap('SIGINT') { puts 'Aborting...'; exit 2 }
class RipError; end

options = Options.new.parse
puts 'Getting disc info...'
output = Ripper.new.info
if output.nil?
  puts "Problem reading disc. Check it's inserted correctly"
  exit 1
end
info = options.merge(Disc.new.info(output))
if info[:id].nil?
  puts 'Could not get disc info. Check you can open the disc in makemkv.'
  exit 1
end
File.write('test/discinfo/' + info[:id] + '.txt', output)
puts 'Done. Applying rules...'
info = Rules.new.apply(info)
File.write('test/discinfo/' + info[:id] + '.yml', info.to_yaml)

puts "#{info[:type]}: #{info[:name]}"
if info[:season]
  puts "Season #{info[:season]}"
  count = info[:titles].size
  puts "#{count} episode(s)"
  titles = info[:titles]
  info[:library] = File.join(info[:library], 'TV Shows')
else
  titles = [info[:titles].first]
  info[:library] = File.join(info[:library], 'Movies')
  if info[:year]
    puts "YEAR: #{info[:year]}"
  else
    puts 'Enter release year'
    info[:year] = gets
  end
end

exit 0 if info[:norip]

unless info[:silent]
  puts 'If the disc is not recognised as a TV Show, edit lib/disc.rb'
  puts 'Press ENTER to start rip or CTRL+C to abort'
  gets
end

titles.each do |title|
  Ripper.new.rip(info[:tempdir], title[:id])
  filesize = File.size(File.join(info[:tempdir], title[:filename]))
  if filesize != title[:size_in_bytes]
    raise RipError, "#{title[:filename]} file size of #{filesize} ' +
      'does not match disc size of #{title[:size_in_bytes]}"
  end

  Library.new.add(options, title)
end

`eject`
