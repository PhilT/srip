#!/bin/env ruby

require 'bundler/setup'

Bundler.require(:default)

require 'fileutils'
require 'yaml'

require './lib/disc'
require './lib/ripper'
require './lib/options'
require './lib/rules'
require './lib/library'

trap('SIGINT') { puts 'Aborting...'; exit 2 }

options = Options.new.parse
puts 'Getting disc info...'
output = Ripper.new.info
info = info.merge(Disc.info(output))
File.write('discinfo/' + info[:name] + '.txt', output)
File.write('discinfo/' + info[:name] + '.yaml', info.to_yaml)
info = Rules.new.apply(info)

puts "#{info[:type]}: #{info[:name]}"
if info[:season]
  puts "Season #{info[:season]}"
  count = info[:titles].size
  puts "#{count} #{'episode'.pluralize(count)}"
  titles = info[:titles]
  info[:library] = File.join(info[:library], 'TV Shows')
else
  titles = [info[:titles].first]
  info[:library] = File.join(info[:library], 'Movies')
  if info[:year]
    puts "YEAR: #{info[:year]}"
  else
    puts 'Enter release year'
    info[:year] = gets
  end
end

exit 0 if info[:norip]

unless info[:silent]
  puts 'Press ENTER to start rip or CTRL+C to abort'
  gets
end

titles.each do |title|
  Ripper.new.rip(info[:tempdir], title[:id])
  filesize = File.size(title[:filename])
  if filesize != title[:size_in_bytes]
    raise RipError, "#{title[:filename]} file size of #{filesize} ' +
      'does not match disc size of #{title[:size_in_bytes]}"
  end

  Library.new.add(options, title)
end

`eject`
